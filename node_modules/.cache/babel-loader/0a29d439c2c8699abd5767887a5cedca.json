{"ast":null,"code":"const html5rocks = {};\nconst DB_VERSION = 1;\nconst DB_NAME = 'budget';\nhtml5rocks.indexedDB = {};\nhtml5rocks.indexedDB.db = null;\nhtml5rocks.indexedDB.onerror = function (e) {\n  console.log(e);\n};\nfunction open() {\n  return new Promise(function (resolve, reject) {\n    const request = indexedDB.open(DB_NAME, DB_VERSION);\n\n    // We can only create Object stores in a versionchange transaction.\n    request.onupgradeneeded = function (e) {\n      const db = e.target.result;\n\n      // A versionchange transaction is started automatically.\n      e.target.transaction.onerror = html5rocks.indexedDB.onerror;\n      if (db.objectStoreNames.contains(DB_NAME)) {\n        db.deleteObjectStore(DB_NAME);\n      }\n      db.createObjectStore(DB_NAME, {\n        keyPath: \"id\"\n      });\n    };\n    request.onsuccess = function (e) {\n      html5rocks.indexedDB.db = e.target.result;\n      resolve();\n    };\n    request.onerror = e => {\n      reject(Error(e));\n    };\n  });\n}\n;\nfunction addItem(item) {\n  const db = html5rocks.indexedDB.db;\n  const trans = db.transaction([DB_NAME], \"readwrite\");\n  const store = trans.objectStore(DB_NAME);\n  const request = store.put(item);\n  request.onsuccess = function (e) {\n    console.log('success');\n  };\n  request.onerror = function (e) {\n    console.log(\"Error Adding: \", e);\n  };\n}\n;\nfunction deleteItem(id) {\n  const db = html5rocks.indexedDB.db;\n  const trans = db.transaction([DB_NAME], \"readwrite\");\n  const store = trans.objectStore(DB_NAME);\n  const request = store.delete(id);\n  request.onsuccess = function (e) {\n    console.log('success');\n  };\n  request.onerror = function (e) {\n    console.log(\"Error Adding: \", e);\n  };\n}\n;\nfunction getItems() {\n  return new Promise((resolve, reject) => {\n    var db = html5rocks.indexedDB.db;\n    if (!db) {\n      reject(Error('No db'));\n    }\n    var trans = db.transaction([DB_NAME], \"readwrite\");\n    var store = trans.objectStore(DB_NAME);\n    const getAllRequest = store.getAll();\n    getAllRequest.onsuccess = function () {\n      resolve(getAllRequest.result);\n    };\n  });\n}\n;\nexport { open, addItem, getItems, deleteItem };","map":{"version":3,"names":["html5rocks","DB_VERSION","DB_NAME","indexedDB","db","onerror","e","console","log","open","Promise","resolve","reject","request","onupgradeneeded","target","result","transaction","objectStoreNames","contains","deleteObjectStore","createObjectStore","keyPath","onsuccess","Error","addItem","item","trans","store","objectStore","put","deleteItem","id","delete","getItems","getAllRequest","getAll"],"sources":["/Users/maksym/Desktop/budjet_app/src/utils/indexdb.js"],"sourcesContent":["const html5rocks = {};\nconst DB_VERSION = 1;\nconst DB_NAME = 'budget';\n\nhtml5rocks.indexedDB = {};\nhtml5rocks.indexedDB.db = null;\n\nhtml5rocks.indexedDB.onerror = function(e) {\n  console.log(e);\n};\n\nfunction open() {\n    return new Promise(function(resolve, reject) {\n        const request = indexedDB.open(DB_NAME, DB_VERSION);\n\n        // We can only create Object stores in a versionchange transaction.\n        request.onupgradeneeded = function(e) {\n            const db = e.target.result;\n\n            // A versionchange transaction is started automatically.\n            e.target.transaction.onerror = html5rocks.indexedDB.onerror;\n\n            if(db.objectStoreNames.contains(DB_NAME)) {\n            db.deleteObjectStore(DB_NAME);\n            }\n\n            db.createObjectStore(DB_NAME, {keyPath: \"id\"});\n        };\n\n        request.onsuccess = function(e) {\n            html5rocks.indexedDB.db = e.target.result;\n            resolve()\n        };\n\n        request.onerror = (e) => {\n            reject(Error(e))\n        };\n    })\n};\n\nfunction addItem(item) {\n  const db = html5rocks.indexedDB.db;\n  const trans = db.transaction([DB_NAME], \"readwrite\");\n  const store = trans.objectStore(DB_NAME);\n\n  const request = store.put(item);\n\n  request.onsuccess = function(e) {\n    console.log('success')\n  };\n\n  request.onerror = function(e) {\n    console.log(\"Error Adding: \", e);\n  };\n};\n\nfunction deleteItem(id) {\n  const db = html5rocks.indexedDB.db;\n  const trans = db.transaction([DB_NAME], \"readwrite\");\n  const store = trans.objectStore(DB_NAME);\n\n  const request = store.delete(id);\n\n  request.onsuccess = function(e) {\n    console.log('success')\n  };\n\n  request.onerror = function(e) {\n    console.log(\"Error Adding: \", e);\n  };\n};\n\nfunction getItems() {\n    return new Promise((resolve, reject) => {\n        var db = html5rocks.indexedDB.db;\n        if (!db) {\n            reject(Error('No db'))\n        }\n        var trans = db.transaction([DB_NAME], \"readwrite\");\n        var store = trans.objectStore(DB_NAME);\n\n        const getAllRequest = store.getAll();\n\n        getAllRequest.onsuccess = function() {\n            resolve(getAllRequest.result);\n        }\n    })\n};\n\nexport {\n    open,\n    addItem,\n    getItems,\n    deleteItem\n}"],"mappings":"AAAA,MAAMA,UAAU,GAAG,CAAC,CAAC;AACrB,MAAMC,UAAU,GAAG,CAAC;AACpB,MAAMC,OAAO,GAAG,QAAQ;AAExBF,UAAU,CAACG,SAAS,GAAG,CAAC,CAAC;AACzBH,UAAU,CAACG,SAAS,CAACC,EAAE,GAAG,IAAI;AAE9BJ,UAAU,CAACG,SAAS,CAACE,OAAO,GAAG,UAASC,CAAC,EAAE;EACzCC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC;AAChB,CAAC;AAED,SAASG,IAAI,GAAG;EACZ,OAAO,IAAIC,OAAO,CAAC,UAASC,OAAO,EAAEC,MAAM,EAAE;IACzC,MAAMC,OAAO,GAAGV,SAAS,CAACM,IAAI,CAACP,OAAO,EAAED,UAAU,CAAC;;IAEnD;IACAY,OAAO,CAACC,eAAe,GAAG,UAASR,CAAC,EAAE;MAClC,MAAMF,EAAE,GAAGE,CAAC,CAACS,MAAM,CAACC,MAAM;;MAE1B;MACAV,CAAC,CAACS,MAAM,CAACE,WAAW,CAACZ,OAAO,GAAGL,UAAU,CAACG,SAAS,CAACE,OAAO;MAE3D,IAAGD,EAAE,CAACc,gBAAgB,CAACC,QAAQ,CAACjB,OAAO,CAAC,EAAE;QAC1CE,EAAE,CAACgB,iBAAiB,CAAClB,OAAO,CAAC;MAC7B;MAEAE,EAAE,CAACiB,iBAAiB,CAACnB,OAAO,EAAE;QAACoB,OAAO,EAAE;MAAI,CAAC,CAAC;IAClD,CAAC;IAEDT,OAAO,CAACU,SAAS,GAAG,UAASjB,CAAC,EAAE;MAC5BN,UAAU,CAACG,SAAS,CAACC,EAAE,GAAGE,CAAC,CAACS,MAAM,CAACC,MAAM;MACzCL,OAAO,EAAE;IACb,CAAC;IAEDE,OAAO,CAACR,OAAO,GAAIC,CAAC,IAAK;MACrBM,MAAM,CAACY,KAAK,CAAClB,CAAC,CAAC,CAAC;IACpB,CAAC;EACL,CAAC,CAAC;AACN;AAAC;AAED,SAASmB,OAAO,CAACC,IAAI,EAAE;EACrB,MAAMtB,EAAE,GAAGJ,UAAU,CAACG,SAAS,CAACC,EAAE;EAClC,MAAMuB,KAAK,GAAGvB,EAAE,CAACa,WAAW,CAAC,CAACf,OAAO,CAAC,EAAE,WAAW,CAAC;EACpD,MAAM0B,KAAK,GAAGD,KAAK,CAACE,WAAW,CAAC3B,OAAO,CAAC;EAExC,MAAMW,OAAO,GAAGe,KAAK,CAACE,GAAG,CAACJ,IAAI,CAAC;EAE/Bb,OAAO,CAACU,SAAS,GAAG,UAASjB,CAAC,EAAE;IAC9BC,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;EACxB,CAAC;EAEDK,OAAO,CAACR,OAAO,GAAG,UAASC,CAAC,EAAE;IAC5BC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEF,CAAC,CAAC;EAClC,CAAC;AACH;AAAC;AAED,SAASyB,UAAU,CAACC,EAAE,EAAE;EACtB,MAAM5B,EAAE,GAAGJ,UAAU,CAACG,SAAS,CAACC,EAAE;EAClC,MAAMuB,KAAK,GAAGvB,EAAE,CAACa,WAAW,CAAC,CAACf,OAAO,CAAC,EAAE,WAAW,CAAC;EACpD,MAAM0B,KAAK,GAAGD,KAAK,CAACE,WAAW,CAAC3B,OAAO,CAAC;EAExC,MAAMW,OAAO,GAAGe,KAAK,CAACK,MAAM,CAACD,EAAE,CAAC;EAEhCnB,OAAO,CAACU,SAAS,GAAG,UAASjB,CAAC,EAAE;IAC9BC,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;EACxB,CAAC;EAEDK,OAAO,CAACR,OAAO,GAAG,UAASC,CAAC,EAAE;IAC5BC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEF,CAAC,CAAC;EAClC,CAAC;AACH;AAAC;AAED,SAAS4B,QAAQ,GAAG;EAChB,OAAO,IAAIxB,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACpC,IAAIR,EAAE,GAAGJ,UAAU,CAACG,SAAS,CAACC,EAAE;IAChC,IAAI,CAACA,EAAE,EAAE;MACLQ,MAAM,CAACY,KAAK,CAAC,OAAO,CAAC,CAAC;IAC1B;IACA,IAAIG,KAAK,GAAGvB,EAAE,CAACa,WAAW,CAAC,CAACf,OAAO,CAAC,EAAE,WAAW,CAAC;IAClD,IAAI0B,KAAK,GAAGD,KAAK,CAACE,WAAW,CAAC3B,OAAO,CAAC;IAEtC,MAAMiC,aAAa,GAAGP,KAAK,CAACQ,MAAM,EAAE;IAEpCD,aAAa,CAACZ,SAAS,GAAG,YAAW;MACjCZ,OAAO,CAACwB,aAAa,CAACnB,MAAM,CAAC;IACjC,CAAC;EACL,CAAC,CAAC;AACN;AAAC;AAED,SACIP,IAAI,EACJgB,OAAO,EACPS,QAAQ,EACRH,UAAU"},"metadata":{},"sourceType":"module"}