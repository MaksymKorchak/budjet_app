{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// import { useState, useEffect, useCallback } from 'react';\n\n// import { STATUSES } from './constants';\n// import { getItems, addItem, deleteItem, updateItem } from './utils/indexdb'\n\n// export const useBooleanToggle = (initialStatus = false) => {\n//     const [status, setStatus] = useState(initialStatus);\n\n//     const handleStatusChange = () => {\n//         console.log('switch state');\n//         setStatus((currrentStatus) => !currrentStatus);\n//     };\n\n//     return {\n//         status,\n//         handleStatusChange\n//     }\n// }\n\n// export const useData = () => {\n//     const [state, setState] = useState({\n//         transactions: [],\n//         error: '',\n//         status: STATUSES.IDLE,\n//         balance: 0,\n//     });\n\n//     useEffect(() => {\n//         setState({\n//             ...state,\n//             status: STATUSES.PENDING\n//         });\n\n//         getItems().then((transactions) => {\n//             setState({\n//                 ...state,\n//                 transactions,\n//                 status: STATUSES.SUCCESS\n//             })\n//             transactions.forEach((transaction) => setBalance(transaction))\n//         }).catch((e) => {\n//             setState({\n//                 ...state,\n//                 transactions: [],\n//                 status: STATUSES.ERROR,\n//                 error: e\n//             })\n//         })\n//     }, [])\n\n//     const setBalance = (transaction) => {\n//         setState((state) => ({\n//             ...state,\n//             balance: state.balance +  Number(transaction.value)\n//         }));\n//     };\n\n//     const pushTransaction = useCallback((data) => {\n\n//         const transaction = {\n//             ...data,\n//             value: +data.value,\n//             id: Date.now()\n//         }\n\n//         setState((state) => ({\n//             ...state,\n//             balance: state.balance +  Number(transaction.value),\n//             transactions: [transaction, ...state.transactions]\n//         }));\n\n//         addItem(transaction);\n\n//     }, [setState]);\n\n//     const onDelete = useCallback((id) => {\n//         const item = state.transactions.find((i) => i.id === id);\n\n//         setState((state) => ({\n//             ...state,\n//             balance: state.balance - Number(item.value),\n//             transactions: state.transactions.filter((item) => item.id !== id)\n//         }));\n\n//         deleteItem(id);\n//     }, [setState,state]);\n\n//     const onStarClick = useCallback((id) => {\n//         const item = state.transactions.find((i) => i.id === id);\n\n//         updateItem({\n//             ...item,\n//             isStarred: !item.isStarred\n//         }).then(() => {\n//             setState((state) => ({\n//                 ...state,\n//                 transactions: state.transactions.map((item) => item.id !== id ? item : {\n//                     ...item,\n//                     isStarred: !item.isStarred\n//                 })\n//             }))\n//         })\n\n//     }, [setState, state])\n\n//     return {\n//         ...state,\n//         pushTransaction,\n//         onDelete,\n//         onStarClick\n//     }\n// }\n\nimport { useState, useEffect, useCallback } from 'react';\nimport { STATUSES } from './constants';\nimport { getData, addItem, deleteItem, updateItem } from './utils/indexdb';\nexport const useBooleanToggle = function () {\n  _s();\n  let initialStatus = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  const [status, setStatus] = useState(initialStatus);\n  const handleStatusChange = () => {\n    console.log('switch state');\n    setStatus(currrentStatus => !currrentStatus);\n  };\n  return {\n    status,\n    handleStatusChange\n  };\n};\n_s(useBooleanToggle, \"gqeGt53fFnV+w5ATWNQzDmB/auw=\");\nexport const useData = () => {\n  _s2();\n  const [state, setState] = useState({\n    transactions: [],\n    error: '',\n    balance: 0,\n    status: STATUSES.IDLE,\n    hasNextPage: true\n  });\n  useEffect(() => {\n    setState({\n      ...state,\n      status: STATUSES.PENDING\n    });\n    getData(0, 20).then(transactions => {\n      setState({\n        ...state,\n        transactions,\n        status: STATUSES.SUCCESS,\n        hasNextPage: true\n      });\n      transactions.forEach(transaction => setBalance(transaction));\n    }).catch(e => {\n      setState({\n        ...state,\n        transactions: [],\n        status: STATUSES.ERROR,\n        error: e,\n        hasNextPage: false\n      });\n    });\n  }, []);\n  const setBalance = transaction => {\n    setState(state => ({\n      ...state,\n      balance: state.balance + Number(transaction.value)\n    }));\n  };\n  const loadMoreRows = useCallback(() => {\n    setState({\n      ...state,\n      status: STATUSES.PENDING\n    });\n    getData(state.transactions.length, 20).then(transactions => {\n      setState({\n        ...state,\n        transactions: [...state.transactions, ...transactions],\n        status: STATUSES.SUCCESS\n      });\n    }).catch(() => {\n      setState({\n        ...state,\n        hasNextPage: false\n      });\n    });\n  }, [state]);\n  const pushTransaction = useCallback(data => {\n    const transaction = {\n      ...data,\n      value: +data.value,\n      id: Date.now()\n    };\n    setState(state => ({\n      ...state,\n      transactions: [transaction, ...state.transactions]\n    }));\n    addItem(transaction);\n  }, [setState]);\n  const onDelete = useCallback(id => {\n    const item = state.transactions.find(i => i.id === id);\n    console.log(state.transactions);\n\n    // setState((state) => ({\n    //     ...state,\n    //     balance: state.balance - Number(item.value),\n    //     transactions: state.transactions.filter((item) => item.id !== id)\n    // }));\n\n    // deleteItem(id);\n  }, [setState]);\n  const onStarClick = useCallback(id => {\n    const item = state.transactions.find(i => i.id === id);\n    updateItem({\n      ...item,\n      isStarred: !item.isStarred\n    }).then(() => {\n      setState(state => ({\n        ...state,\n        transactions: state.transactions.map(item => item.id !== id ? item : {\n          ...item,\n          isStarred: !item.isStarred\n        })\n      }));\n    });\n  }, [setState, state]);\n  return {\n    ...state,\n    pushTransaction,\n    onDelete,\n    onStarClick,\n    loadMoreRows\n  };\n};\n_s2(useData, \"8AeJUmRIjz7f6dezCXNVeaO48uQ=\");","map":{"version":3,"names":["useState","useEffect","useCallback","STATUSES","getData","addItem","deleteItem","updateItem","useBooleanToggle","initialStatus","status","setStatus","handleStatusChange","console","log","currrentStatus","useData","state","setState","transactions","error","balance","IDLE","hasNextPage","PENDING","then","SUCCESS","forEach","transaction","setBalance","catch","e","ERROR","Number","value","loadMoreRows","length","pushTransaction","data","id","Date","now","onDelete","item","find","i","onStarClick","isStarred","map"],"sources":["/Users/maksym/Desktop/budjet_app/src/hooks.js"],"sourcesContent":["// import { useState, useEffect, useCallback } from 'react';\n\n// import { STATUSES } from './constants';\n// import { getItems, addItem, deleteItem, updateItem } from './utils/indexdb'\n\n// export const useBooleanToggle = (initialStatus = false) => {\n//     const [status, setStatus] = useState(initialStatus);\n\n//     const handleStatusChange = () => {\n//         console.log('switch state');\n//         setStatus((currrentStatus) => !currrentStatus);\n//     };\n\n//     return {\n//         status,\n//         handleStatusChange\n//     }\n// }\n\n// export const useData = () => {\n//     const [state, setState] = useState({\n//         transactions: [],\n//         error: '',\n//         status: STATUSES.IDLE,\n//         balance: 0,\n//     });\n\n//     useEffect(() => {\n//         setState({\n//             ...state,\n//             status: STATUSES.PENDING\n//         });\n\n//         getItems().then((transactions) => {\n//             setState({\n//                 ...state,\n//                 transactions,\n//                 status: STATUSES.SUCCESS\n//             })\n//             transactions.forEach((transaction) => setBalance(transaction))\n//         }).catch((e) => {\n//             setState({\n//                 ...state,\n//                 transactions: [],\n//                 status: STATUSES.ERROR,\n//                 error: e\n//             })\n//         })\n//     }, [])\n\n//     const setBalance = (transaction) => {\n//         setState((state) => ({\n//             ...state,\n//             balance: state.balance +  Number(transaction.value)\n//         }));\n//     };\n\n//     const pushTransaction = useCallback((data) => {\n\n//         const transaction = {\n//             ...data,\n//             value: +data.value,\n//             id: Date.now()\n//         }\n\n//         setState((state) => ({\n//             ...state,\n//             balance: state.balance +  Number(transaction.value),\n//             transactions: [transaction, ...state.transactions]\n//         }));\n\n//         addItem(transaction);\n\n//     }, [setState]);\n\n//     const onDelete = useCallback((id) => {\n//         const item = state.transactions.find((i) => i.id === id);\n\n//         setState((state) => ({\n//             ...state,\n//             balance: state.balance - Number(item.value),\n//             transactions: state.transactions.filter((item) => item.id !== id)\n//         }));\n\n//         deleteItem(id);\n//     }, [setState,state]);\n\n//     const onStarClick = useCallback((id) => {\n//         const item = state.transactions.find((i) => i.id === id);\n        \n//         updateItem({\n//             ...item,\n//             isStarred: !item.isStarred\n//         }).then(() => {\n//             setState((state) => ({\n//                 ...state,\n//                 transactions: state.transactions.map((item) => item.id !== id ? item : {\n//                     ...item,\n//                     isStarred: !item.isStarred\n//                 })\n//             }))\n//         })\n        \n//     }, [setState, state])\n\n//     return {\n//         ...state,\n//         pushTransaction,\n//         onDelete,\n//         onStarClick\n//     }\n// }\n\nimport { useState, useEffect, useCallback } from 'react';\n\nimport { STATUSES } from './constants';\nimport { getData, addItem, deleteItem, updateItem } from './utils/indexdb'\n\nexport const useBooleanToggle = (initialStatus = false) => {\n    const [status, setStatus] = useState(initialStatus);\n\n    const handleStatusChange = () => {\n        console.log('switch state');\n        setStatus((currrentStatus) => !currrentStatus);\n    };\n\n    return {\n        status,\n        handleStatusChange\n    }\n}\n\n\nexport const useData = () => {\n    const [state, setState] = useState({\n        transactions: [],\n        error: '',\n        balance: 0,\n        status: STATUSES.IDLE,\n        hasNextPage: true\n    });\n\n    useEffect(() => {\n        setState({\n            ...state,\n            status: STATUSES.PENDING\n        });\n\n        getData(0, 20).then((transactions) => {\n            setState({\n                ...state,\n                transactions,\n                status: STATUSES.SUCCESS,\n                hasNextPage: true\n            })\n        transactions.forEach((transaction) => setBalance(transaction))\n        }).catch((e) => {\n            setState({\n                ...state,\n                transactions: [],\n                status: STATUSES.ERROR,\n                error: e,\n                hasNextPage: false\n            })\n        })\n    }, [])\n\n    const setBalance = (transaction) => {\n        setState((state) => ({\n            ...state,\n            balance: state.balance +  Number(transaction.value)\n        }));\n    };\n\n    const loadMoreRows = useCallback(() => {\n        setState({\n            ...state,\n            status: STATUSES.PENDING\n        });\n\n        getData(state.transactions.length, 20).then((transactions) => {\n            setState({\n                ...state,\n                transactions: [...state.transactions, ...transactions],\n                status: STATUSES.SUCCESS\n            })\n        }).catch(() => {\n            setState({\n                ...state,\n                hasNextPage: false\n            })\n        })\n    }, [state])\n\n    const pushTransaction = useCallback((data) => {\n        const transaction = {\n            ...data,\n            value: +data.value,\n            id: Date.now()\n        }\n\n        setState((state) => ({\n            ...state,\n            transactions: [transaction, ...state.transactions]\n        }));\n\n        addItem(transaction);\n    }, [setState]);\n\n    const onDelete = useCallback((id) => {\n        const item = state.transactions.find((i) => i.id === id);\n        console.log(state.transactions)\n\n        // setState((state) => ({\n        //     ...state,\n        //     balance: state.balance - Number(item.value),\n        //     transactions: state.transactions.filter((item) => item.id !== id)\n        // }));\n\n        // deleteItem(id);\n    }, [setState]);\n\n    const onStarClick = useCallback((id) => {\n        const item = state.transactions.find((i) => i.id === id);\n        \n        updateItem({\n            ...item,\n            isStarred: !item.isStarred\n        }).then(() => {\n            setState((state) => ({\n                ...state,\n                transactions: state.transactions.map((item) => item.id !== id ? item : {\n                    ...item,\n                    isStarred: !item.isStarred\n                })\n            }))\n        })\n        \n    }, [setState, state])\n\n\n    return {\n        ...state,\n        pushTransaction,\n        onDelete,\n        onStarClick,\n        loadMoreRows\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}